{
    "sourceFile": "src/pages/index.page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1674505544629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1674505697215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,11 @@\n }\n \n export async function getServerSideProps () {\n     try {\n-        const response = await stripe.products.list()\n+        const response = await stripe.products.list({\n+            expand: ['data.default_price'],\n+        })\n         if (!response) {\n             console.log('Response deu ruim', {\n                 cause: response,\n             })\n"
                },
                {
                    "date": 1674506396320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,15 +42,15 @@\n const image = faker.image.nightlife()\n const bigText = 'Repellat accusamus beatae sapiente sint aperiam. At magnam temporibus eos aut incidunt. Explicabo quam labore tempore beatae sapiente maiores. Expedita optio temporibus dolore ratione magni perferendis qui. Accusamus eius maxime beatae tenetur eius. Animi dolore accusantium ad. Sapiente animi vel. Veritatis error est laborum dolorum. Tempora voluptatem cupiditate quam expedita omnis quam temporibus. Corporis exercitationem reiciendis minima quam nihil. Molestias iure ipsam necessitatibus inventore minus. Ducimus earum harum id voluptate. Hic ratione odio assumenda sint alias repellat a. Labore commodi itaque. Beatae perferendis nam libero eum beatae. Dolorem voluptatibus molestias sunt laborum voluptatum nihil tempore doloremque.'\n \n interface ProductProps {\n-    products?: {\n+    products: {\n         id: string\n         description: string;\n         name: string;\n-        imageURL?: string;\n+        imageURL: string;\n         price: string\n-    }\n+    }[]\n }\n \n export default function Home ({products}: ProductProps) {\n \n"
                },
                {
                    "date": 1674506550419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n                     <li>Esta nem se fala, uma dicona</li>\n                     <li>Esta é uma diquissíma importantissíma</li>\n                 </ul>\n             </TipsContent>\n-            <div>\n+            <div style={{display: 'flex', flexDirection:'column'}}>\n                 <Product products={products}/>\n             </div>\n \n             <div>\n"
                },
                {
                    "date": 1674507753836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,13 +27,13 @@\n     ConfirmAttendanceButton, TipsContent, Header,\n } from '../styles/page/app'\n \n import Image from 'next/image'\n-import {faker} from '@faker-js/faker/locale/pt_BR'\n+import { faker } from '@faker-js/faker/locale/pt_BR'\n import CountdownTimer from './components/Counter'\n \n import Product from './product/product.page'\n-import {stripe} from '../lib/stripe'\n+import { stripe } from '../lib/stripe'\n import Stripe from 'stripe'\n \n const Map = dynamic(() => import('./components/Maps'), {\n     ssr: false,\n@@ -51,9 +51,9 @@\n         price: string\n     }[]\n }\n \n-export default function Home ({products}: ProductProps) {\n+export default function Home({ products }: ProductProps) {\n \n     return (\n         <Container>\n             <Text>Lucas e Ana</Text>\n@@ -68,9 +68,9 @@\n                 <Image\n                     src={image}\n                     height={400}\n                     width={2000}\n-                    style={{objectFit: 'cover', width: '100%'}}\n+                    style={{ objectFit: 'cover', width: '100%' }}\n                     alt={''}\n                     quality={100}\n                     priority\n                 />\n@@ -85,9 +85,9 @@\n                     <Bride>\n                         <DefaultTitle>A noiva</DefaultTitle>\n                         <p>Ana cleide</p>\n                     </Bride>\n-                    <Image priority src={image} alt={''} width={300} height={300}/>\n+                    <Image priority src={image} alt={''} width={300} height={300} />\n                     <Groom>\n                         <DefaultTitle>O noivo</DefaultTitle>\n                         <p>Lucas Luan</p>\n                     </Groom>\n@@ -107,23 +107,23 @@\n             <ConfirmAttendanceContent id=\"confirmAttendance\">\n                 <ConfirmAttendanceTitle>Confirme sua presença</ConfirmAttendanceTitle>\n \n                 <LabelConfirmAttendance>Seu nome completo:</LabelConfirmAttendance>\n-                <ConfirmAttendanceInput type=\"text\"/>\n+                <ConfirmAttendanceInput type=\"text\" />\n \n                 <CheckBoxesConfirm>\n-                    <input type=\"checkbox\"/>\n+                    <input type=\"checkbox\" />\n                     <p>Confirme apenas a minha presença</p>\n-                    <div style={{margin: '0.5rem'}}></div>\n-                    <input type=\"checkbox\"/>\n+                    <div style={{ margin: '0.5rem' }}></div>\n+                    <input type=\"checkbox\" />\n                     <p>Confirme a presença de todos a quem o convite foi destinado</p>\n                 </CheckBoxesConfirm>\n \n \n                 <ConfirmAttendanceButton>CONFIRMAR PRESENÇA</ConfirmAttendanceButton>\n             </ConfirmAttendanceContent>\n \n-            <CountdownTimer targetDate={new Date('2023-10-28 15:00:00')}/>\n+            <CountdownTimer targetDate={new Date('2023-10-28 15:00:00')} />\n \n             <Text>Próximos eventos</Text>\n             <NextEventContent id=\"nextevent\">\n                 <InformationEvent>\n@@ -135,9 +135,12 @@\n                     <h3>Horário:</h3>\n                     <p>15:00</p>\n                 </InformationEvent>\n                 <MapOfEvent>\n-                    <Map/>\n+                    <iframe\n+                        src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d10595.518927284726!2d-47.91009065039261!3d-15.79434745364092!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x935a3a8d1adcfa01%3A0x28135d84739659de!2sParque%20da%20Cidade%20Sarah%20Kubitschek!5e0!3m2!1spt-BR!2sbr!4v1673800809201!5m2!1spt-BR!2sbr\"\n+                        width=\"600\" height=\"450\" allowFullScreen loading=\"lazy\"\n+                        referrerPolicy=\"no-referrer-when-downgrade\"></iframe>\n                 </MapOfEvent>\n             </NextEventContent>\n \n             <TipsContent id=\"tips\">\n@@ -151,23 +154,16 @@\n                     <li>Esta nem se fala, uma dicona</li>\n                     <li>Esta é uma diquissíma importantissíma</li>\n                 </ul>\n             </TipsContent>\n-            <div style={{display: 'flex', flexDirection:'column'}}>\n-                <Product products={products}/>\n-            </div>\n-\n             <div>\n-                <iframe\n-                    src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d10595.518927284726!2d-47.91009065039261!3d-15.79434745364092!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x935a3a8d1adcfa01%3A0x28135d84739659de!2sParque%20da%20Cidade%20Sarah%20Kubitschek!5e0!3m2!1spt-BR!2sbr!4v1673800809201!5m2!1spt-BR!2sbr\"\n-                    width=\"600\" height=\"450\" allowFullScreen loading=\"lazy\"\n-                    referrerPolicy=\"no-referrer-when-downgrade\"></iframe>\n+                <Product products={products} />\n             </div>\n         </Container>\n     )\n }\n \n-export async function getServerSideProps () {\n+export async function getServerSideProps() {\n     try {\n         const response = await stripe.products.list({\n             expand: ['data.default_price'],\n         })\n@@ -199,9 +195,9 @@\n             }\n         })\n \n         return {\n-            props: {products},\n+            props: { products },\n \n         }\n     } catch (error) {\n         console.error('Deu ruim', {\n"
                },
                {
                    "date": 1674507956687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,50 +161,4 @@\n         </Container>\n     )\n }\n \n-export async function getServerSideProps() {\n-    try {\n-        const response = await stripe.products.list({\n-            expand: ['data.default_price'],\n-        })\n-        if (!response) {\n-            console.log('Response deu ruim', {\n-                cause: response,\n-            })\n-        }\n-\n-        console.log('***************************')\n-        console.log(response)\n-        console.log('***************************')\n-\n-        const formatAmount = (amount: number | null) => {\n-            if (!amount) return\n-            return new Intl.NumberFormat('pt-BR', {\n-                style: 'currency',\n-                currency: 'BRL',\n-            }).format(amount / 100)\n-        }\n-        const products = response.data.map(product => {\n-            const price = product.default_price as Stripe.Price\n-            return {\n-                id: product.id,\n-                name: product.name,\n-                description: product.description,\n-                imageURL: product.images[0],\n-                price: formatAmount(price.unit_amount),\n-            }\n-        })\n-\n-        return {\n-            props: { products },\n-\n-        }\n-    } catch (error) {\n-        console.error('Deu ruim', {\n-            cause: error,\n-        })\n-        return {\n-            props: {}\n-        }\n-    }\n-}\n"
                },
                {
                    "date": 1674508241146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,4 +161,50 @@\n         </Container>\n     )\n }\n \n+export async function getServerSideProps() {\n+    try {\n+        const response = await stripe.products.list({\n+            expand: ['data.default_price'],\n+        })\n+        if (!response) {\n+            console.log('Response deu ruim', {\n+                cause: response,\n+            })\n+        }\n+\n+        console.log('***************************')\n+        console.log(response)\n+        console.log('***************************')\n+\n+        const formatAmount = (amount: number | null) => {\n+            if (!amount) return\n+            return new Intl.NumberFormat('pt-BR', {\n+                style: 'currency',\n+                currency: 'BRL',\n+            }).format(amount / 100)\n+        }\n+        const products = response.data.map(product => {\n+            const price = product.default_price as Stripe.Price\n+            return {\n+                id: product.id,\n+                name: product.name,\n+                description: product.description,\n+                imageURL: product.images[0],\n+                price: formatAmount(price.unit_amount),\n+            }\n+        })\n+\n+        return {\n+            props: { products },\n+\n+        }\n+    } catch (error) {\n+        console.error('Deu ruim', {\n+            cause: error,\n+        })\n+        return {\n+            props: {}\n+        }\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1674508596835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,12 +34,10 @@\n import Product from './product/product.page'\n import { stripe } from '../lib/stripe'\n import Stripe from 'stripe'\n \n-const Map = dynamic(() => import('./components/Maps'), {\n-    ssr: false,\n-})\n \n+\n const image = faker.image.nightlife()\n const bigText = 'Repellat accusamus beatae sapiente sint aperiam. At magnam temporibus eos aut incidunt. Explicabo quam labore tempore beatae sapiente maiores. Expedita optio temporibus dolore ratione magni perferendis qui. Accusamus eius maxime beatae tenetur eius. Animi dolore accusantium ad. Sapiente animi vel. Veritatis error est laborum dolorum. Tempora voluptatem cupiditate quam expedita omnis quam temporibus. Corporis exercitationem reiciendis minima quam nihil. Molestias iure ipsam necessitatibus inventore minus. Ducimus earum harum id voluptate. Hic ratione odio assumenda sint alias repellat a. Labore commodi itaque. Beatae perferendis nam libero eum beatae. Dolorem voluptatibus molestias sunt laborum voluptatum nihil tempore doloremque.'\n \n interface ProductProps {\n@@ -47,8 +45,9 @@\n         id: string\n         description: string;\n         name: string;\n         imageURL: string;\n+        priceFormatted: string\n         price: string\n     }[]\n }\n \n@@ -190,9 +189,10 @@\n                 id: product.id,\n                 name: product.name,\n                 description: product.description,\n                 imageURL: product.images[0],\n-                price: formatAmount(price.unit_amount),\n+                priceFormatted: formatAmount(price.unit_amount),\n+                price: price.unit_amount,\n             }\n         })\n \n         return {\n"
                },
                {
                    "date": 1674508677266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,8 @@\n         id: string\n         description: string;\n         name: string;\n         imageURL: string;\n-        priceFormatted: string\n         price: string\n     }[]\n }\n \n@@ -189,10 +188,9 @@\n                 id: product.id,\n                 name: product.name,\n                 description: product.description,\n                 imageURL: product.images[0],\n-                priceFormatted: formatAmount(price.unit_amount),\n-                price: price.unit_amount,\n+                price: formatAmount(price.unit_amount),\n             }\n         })\n \n         return {\n"
                },
                {
                    "date": 1674514645680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,9 @@\n         description: string;\n         name: string;\n         imageURL: string;\n         price: string\n+        priceId: string\n     }[]\n }\n \n export default function Home({ products }: ProductProps) {\n@@ -189,8 +190,9 @@\n                 name: product.name,\n                 description: product.description,\n                 imageURL: product.images[0],\n                 price: formatAmount(price.unit_amount),\n+                priceId: price.id\n             }\n         })\n \n         return {\n"
                },
                {
                    "date": 1674514803147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,11 +171,11 @@\n                 cause: response,\n             })\n         }\n \n-        console.log('***************************')\n-        console.log(response)\n-        console.log('***************************')\n+        // console.log('***************************')\n+        // console.log(response)\n+        // console.log('***************************')\n \n         const formatAmount = (amount: number | null) => {\n             if (!amount) return\n             return new Intl.NumberFormat('pt-BR', {\n@@ -192,10 +192,12 @@\n                 imageURL: product.images[0],\n                 price: formatAmount(price.unit_amount),\n                 priceId: price.id\n             }\n+            console.log('PRICE', price)\n         })\n \n+\n         return {\n             props: { products },\n \n         }\n"
                },
                {
                    "date": 1674514831872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,17 +184,17 @@\n             }).format(amount / 100)\n         }\n         const products = response.data.map(product => {\n             const price = product.default_price as Stripe.Price\n+            console.log('PRICE', price)\n             return {\n                 id: product.id,\n                 name: product.name,\n                 description: product.description,\n                 imageURL: product.images[0],\n                 price: formatAmount(price.unit_amount),\n                 priceId: price.id\n             }\n-            console.log('PRICE', price)\n         })\n \n \n         return {\n"
                }
            ],
            "date": 1674505544629,
            "name": "Commit-0",
            "content": "import dynamic from 'next/dynamic'\nimport {\n    Container,\n    AboutUsContent,\n    AboutUsTitle,\n    BrideAndGroomContent,\n    Bride,\n    Groom,\n    ImageContent,\n    Text,\n    OurStory,\n    MarriageProposal,\n    KnowingEachOtherUntilMarriage,\n    DefaultTitle,\n    OurStoryTitle,\n    MarriageProposalTitle,\n    OurStoryText,\n    MarriageProposalText,\n    ConfirmAttendanceContent,\n    NextEventContent,\n    MapOfEvent,\n    InformationEvent,\n    CheckBoxesConfirm,\n    ConfirmAttendanceInput,\n    LabelConfirmAttendance,\n    ConfirmAttendanceTitle,\n    ConfirmAttendanceButton, TipsContent, Header,\n} from '../styles/page/app'\n\nimport Image from 'next/image'\nimport {faker} from '@faker-js/faker/locale/pt_BR'\nimport CountdownTimer from './components/Counter'\n\nimport Product from './product/product.page'\nimport {stripe} from '../lib/stripe'\nimport Stripe from 'stripe'\n\nconst Map = dynamic(() => import('./components/Maps'), {\n    ssr: false,\n})\n\nconst image = faker.image.nightlife()\nconst bigText = 'Repellat accusamus beatae sapiente sint aperiam. At magnam temporibus eos aut incidunt. Explicabo quam labore tempore beatae sapiente maiores. Expedita optio temporibus dolore ratione magni perferendis qui. Accusamus eius maxime beatae tenetur eius. Animi dolore accusantium ad. Sapiente animi vel. Veritatis error est laborum dolorum. Tempora voluptatem cupiditate quam expedita omnis quam temporibus. Corporis exercitationem reiciendis minima quam nihil. Molestias iure ipsam necessitatibus inventore minus. Ducimus earum harum id voluptate. Hic ratione odio assumenda sint alias repellat a. Labore commodi itaque. Beatae perferendis nam libero eum beatae. Dolorem voluptatibus molestias sunt laborum voluptatum nihil tempore doloremque.'\n\ninterface ProductProps {\n    products?: {\n        id: string\n        description: string;\n        name: string;\n        imageURL?: string;\n        price: string\n    }\n}\n\nexport default function Home ({products}: ProductProps) {\n\n    return (\n        <Container>\n            <Text>Lucas e Ana</Text>\n            <Header>\n                <a href=\"#aboutus\">Os noivos</a>\n                <a href=\"#confirmAttendance\">Confirmar Presença</a>\n                <a href=\"#countdown\">Contagem Regressiva</a>\n                <a href=\"#nextevent\">Próximos Eventos</a>\n                <a href=\"#tips\">Dicas</a>\n            </Header>\n            <ImageContent>\n                <Image\n                    src={image}\n                    height={400}\n                    width={2000}\n                    style={{objectFit: 'cover', width: '100%'}}\n                    alt={''}\n                    quality={100}\n                    priority\n                />\n                <Text>\n                    Bem-vindos! Queridos amigos e familiares, o dia mais especial de nossas vidas está chegando e\n                    gostariámos de contar com a presença de todos vocês.\n                </Text>\n            </ImageContent>\n            <AboutUsContent id=\"aboutus\">\n                <AboutUsTitle>Os noivos</AboutUsTitle>\n                <BrideAndGroomContent>\n                    <Bride>\n                        <DefaultTitle>A noiva</DefaultTitle>\n                        <p>Ana cleide</p>\n                    </Bride>\n                    <Image priority src={image} alt={''} width={300} height={300}/>\n                    <Groom>\n                        <DefaultTitle>O noivo</DefaultTitle>\n                        <p>Lucas Luan</p>\n                    </Groom>\n                </BrideAndGroomContent>\n\n                <KnowingEachOtherUntilMarriage>\n                    <OurStory>\n                        <OurStoryTitle>Nossa História</OurStoryTitle>\n                        <OurStoryText>{bigText}</OurStoryText>\n                    </OurStory>\n                    <MarriageProposal>\n                        <MarriageProposalTitle>O Pedido</MarriageProposalTitle>\n                        <MarriageProposalText>{bigText}</MarriageProposalText>\n                    </MarriageProposal>\n                </KnowingEachOtherUntilMarriage>\n            </AboutUsContent>\n            <ConfirmAttendanceContent id=\"confirmAttendance\">\n                <ConfirmAttendanceTitle>Confirme sua presença</ConfirmAttendanceTitle>\n\n                <LabelConfirmAttendance>Seu nome completo:</LabelConfirmAttendance>\n                <ConfirmAttendanceInput type=\"text\"/>\n\n                <CheckBoxesConfirm>\n                    <input type=\"checkbox\"/>\n                    <p>Confirme apenas a minha presença</p>\n                    <div style={{margin: '0.5rem'}}></div>\n                    <input type=\"checkbox\"/>\n                    <p>Confirme a presença de todos a quem o convite foi destinado</p>\n                </CheckBoxesConfirm>\n\n\n                <ConfirmAttendanceButton>CONFIRMAR PRESENÇA</ConfirmAttendanceButton>\n            </ConfirmAttendanceContent>\n\n            <CountdownTimer targetDate={new Date('2023-10-28 15:00:00')}/>\n\n            <Text>Próximos eventos</Text>\n            <NextEventContent id=\"nextevent\">\n                <InformationEvent>\n                    <Text>Casamento</Text>\n                    <h3>Data:</h3>\n                    <p>28/10/2023</p>\n                    <h3>Local:</h3>\n                    <p>Parque da cidade</p>\n                    <h3>Horário:</h3>\n                    <p>15:00</p>\n                </InformationEvent>\n                <MapOfEvent>\n                    <Map/>\n                </MapOfEvent>\n            </NextEventContent>\n\n            <TipsContent id=\"tips\">\n                <ConfirmAttendanceTitle>Dicas</ConfirmAttendanceTitle>\n                <ul>\n                    <li>O local será no parque da cidade recheado de árvores e plantas. Apesar do horário ser X, a noite\n                        costuma esfriar. Não esqueça de levar um casaquinho.\n                    </li>\n                    <li>Esta daqui é outra dica para o dia do casamento</li>\n                    <li>Esta daqui é mais uma outra dica</li>\n                    <li>Esta nem se fala, uma dicona</li>\n                    <li>Esta é uma diquissíma importantissíma</li>\n                </ul>\n            </TipsContent>\n            <div>\n                <Product products={products}/>\n            </div>\n\n            <div>\n                <iframe\n                    src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d10595.518927284726!2d-47.91009065039261!3d-15.79434745364092!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x935a3a8d1adcfa01%3A0x28135d84739659de!2sParque%20da%20Cidade%20Sarah%20Kubitschek!5e0!3m2!1spt-BR!2sbr!4v1673800809201!5m2!1spt-BR!2sbr\"\n                    width=\"600\" height=\"450\" allowFullScreen loading=\"lazy\"\n                    referrerPolicy=\"no-referrer-when-downgrade\"></iframe>\n            </div>\n        </Container>\n    )\n}\n\nexport async function getServerSideProps () {\n    try {\n        const response = await stripe.products.list()\n        if (!response) {\n            console.log('Response deu ruim', {\n                cause: response,\n            })\n        }\n\n        console.log('***************************')\n        console.log(response)\n        console.log('***************************')\n\n        const formatAmount = (amount: number | null) => {\n            if (!amount) return\n            return new Intl.NumberFormat('pt-BR', {\n                style: 'currency',\n                currency: 'BRL',\n            }).format(amount / 100)\n        }\n        const products = response.data.map(product => {\n            const price = product.default_price as Stripe.Price\n            return {\n                id: product.id,\n                name: product.name,\n                description: product.description,\n                imageURL: product.images[0],\n                price: formatAmount(price.unit_amount),\n            }\n        })\n\n        return {\n            props: {products},\n\n        }\n    } catch (error) {\n        console.error('Deu ruim', {\n            cause: error,\n        })\n        return {\n            props: {}\n        }\n    }\n}\n"
        }
    ]
}