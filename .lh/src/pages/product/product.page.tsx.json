{
    "sourceFile": "src/pages/product/product.page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 43,
            "patches": [
                {
                    "date": 1674505998730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1674506349348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,43 +1,35 @@\n+import Image from 'next/image';\r\n import { ProductContainer, ProductImage, ProductInfo } from '../../styles/page/product'\r\n-import champanheImage from '../../assets/champanhe.png'\r\n-import Image from 'next/image'\r\n-import { GetServerSideProps, GetStaticProps } from 'next'\r\n-import { stripe } from '../../lib/stripe'\r\n-import Stripe from 'stripe'\r\n-\r\n interface ProductProps {\r\n-    products?: {\r\n+    products: {\r\n         id: string\r\n         description: string;\r\n         name: string;\r\n-        imageURL?: string;\r\n+        imageURL: string;\r\n         price: string\r\n-    }\r\n+    }[]\r\n }\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n     // async function handleContribute() {\r\n \r\n     // }\r\n \r\n     return (\r\n-\r\n-\r\n-        {\r\n-            products.map(product => {\r\n-                <ProductContainer>\r\n-                    <ProductImage>\r\n-                        // <Image priority src={product.images} alt={''} width={300} />\r\n-                    </ProductImage>\r\n-                    <h3>{product?.name}</h3>\r\n-                    <ProductInfo>\r\n-                        <p>{product?.description}</p>\r\n-                    </ProductInfo>\r\n-                    <button>Contribuir</button>\r\n-                </ProductContainer>\r\n-            })\r\n-        }\r\n+        <div>\r\n+            {\r\n+                products.map(product => {\r\n+                    return (\r\n+                        <ProductContainer key={product.id}>\r\n+                            <ProductImage>\r\n+                                <Image src={product.imageURL} alt=''/>\r\n+                            </ProductImage>\r\n+                        </ProductContainer>\r\n+                    )\r\n+                })\r\n+            }\r\n+        </div>\r\n     )\r\n }\r\n \r\n export default Product\r\n"
                },
                {
                    "date": 1674506463218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n                 products.map(product => {\r\n                     return (\r\n                         <ProductContainer key={product.id}>\r\n                             <ProductImage>\r\n-                                <Image src={product.imageURL} alt=''/>\r\n+                                <Image src={product.imageURL} alt='' width={300} height={300}/>\r\n                             </ProductImage>\r\n                         </ProductContainer>\r\n                     )\r\n                 })\r\n"
                },
                {
                    "date": 1674506506706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,10 +21,15 @@\n                 products.map(product => {\r\n                     return (\r\n                         <ProductContainer key={product.id}>\r\n                             <ProductImage>\r\n-                                <Image src={product.imageURL} alt='' width={300} height={300}/>\r\n+                                <Image src={product.imageURL} alt='' width={300} height={300} />\r\n                             </ProductImage>\r\n+                            <h3>{product?.name}</h3>\r\n+                            <ProductInfo>\r\n+                                <p>{product?.description}</p>\r\n+                            </ProductInfo>\r\n+                            <button>Contribuir</button>\r\n                         </ProductContainer>\r\n                     )\r\n                 })\r\n             }\r\n"
                },
                {
                    "date": 1674506629605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,8 @@\n \r\n     // }\r\n \r\n     return (\r\n-        <div>\r\n-            {\r\n                 products.map(product => {\r\n                     return (\r\n                         <ProductContainer key={product.id}>\r\n                             <ProductImage>\r\n@@ -31,10 +29,9 @@\n                             <button>Contribuir</button>\r\n                         </ProductContainer>\r\n                     )\r\n                 })\r\n-            }\r\n-        </div>\r\n+            \r\n     )\r\n }\r\n \r\n export default Product\r\n"
                },
                {
                    "date": 1674506761464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     // async function handleContribute() {\r\n \r\n     // }\r\n \r\n-    return (\r\n+   \r\n                 products.map(product => {\r\n                     return (\r\n                         <ProductContainer key={product.id}>\r\n                             <ProductImage>\r\n@@ -30,8 +30,8 @@\n                         </ProductContainer>\r\n                     )\r\n                 })\r\n             \r\n-    )\r\n+    \r\n }\r\n \r\n export default Product\r\n"
                },
                {
                    "date": 1674506769296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,24 +14,24 @@\n     // async function handleContribute() {\r\n \r\n     // }\r\n \r\n-   \r\n-                products.map(product => {\r\n-                    return (\r\n-                        <ProductContainer key={product.id}>\r\n-                            <ProductImage>\r\n-                                <Image src={product.imageURL} alt='' width={300} height={300} />\r\n-                            </ProductImage>\r\n-                            <h3>{product?.name}</h3>\r\n-                            <ProductInfo>\r\n-                                <p>{product?.description}</p>\r\n-                            </ProductInfo>\r\n-                            <button>Contribuir</button>\r\n-                        </ProductContainer>\r\n-                    )\r\n-                })\r\n-            \r\n-    \r\n+    return (\r\n+        products.map(product => {\r\n+            return (\r\n+                <ProductContainer key={product.id}>\r\n+                    <ProductImage>\r\n+                        <Image src={product.imageURL} alt='' width={300} height={300} />\r\n+                    </ProductImage>\r\n+                    <h3>{product?.name}</h3>\r\n+                    <ProductInfo>\r\n+                        <p>{product?.description}</p>\r\n+                    </ProductInfo>\r\n+                    <button>Contribuir</button>\r\n+                </ProductContainer>\r\n+            )\r\n+        })\r\n+\r\n+    )\r\n }\r\n \r\n export default Product\r\n"
                },
                {
                    "date": 1674506843181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import Image from 'next/image';\r\n-import { ProductContainer, ProductImage, ProductInfo } from '../../styles/page/product'\r\n+import { ProductContainer,ProductContent, ProductImage, ProductInfo } from '../../styles/page/product'\r\n interface ProductProps {\r\n     products: {\r\n         id: string\r\n         description: string;\r\n@@ -17,18 +17,18 @@\n \r\n     return (\r\n         products.map(product => {\r\n             return (\r\n-                <ProductContainer key={product.id}>\r\n+                <ProductContent key={product.id}>\r\n                     <ProductImage>\r\n                         <Image src={product.imageURL} alt='' width={300} height={300} />\r\n                     </ProductImage>\r\n                     <h3>{product?.name}</h3>\r\n                     <ProductInfo>\r\n                         <p>{product?.description}</p>\r\n                     </ProductInfo>\r\n                     <button>Contribuir</button>\r\n-                </ProductContainer>\r\n+                </ProductContent>\r\n             )\r\n         })\r\n \r\n     )\r\n"
                },
                {
                    "date": 1674506886886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import Image from 'next/image';\r\n-import { ProductContainer,ProductContent, ProductImage, ProductInfo } from '../../styles/page/product'\r\n+import { ProductContainer, ProductContent, ProductImage, ProductInfo } from '../../styles/page/product'\r\n interface ProductProps {\r\n     products: {\r\n         id: string\r\n         description: string;\r\n@@ -15,23 +15,24 @@\n \r\n     // }\r\n \r\n     return (\r\n-        products.map(product => {\r\n-            return (\r\n-                <ProductContent key={product.id}>\r\n-                    <ProductImage>\r\n-                        <Image src={product.imageURL} alt='' width={300} height={300} />\r\n-                    </ProductImage>\r\n-                    <h3>{product?.name}</h3>\r\n-                    <ProductInfo>\r\n-                        <p>{product?.description}</p>\r\n-                    </ProductInfo>\r\n-                    <button>Contribuir</button>\r\n-                </ProductContent>\r\n-            )\r\n-        })\r\n-\r\n+        <ProductContainer>\r\n+            {products.map(product => {\r\n+                return (\r\n+                    <ProductContent key={product.id}>\r\n+                        <ProductImage>\r\n+                            <Image src={product.imageURL} alt='' width={300} height={300} />\r\n+                        </ProductImage>\r\n+                        <h3>{product?.name}</h3>\r\n+                        <ProductInfo>\r\n+                            <p>{product?.description}</p>\r\n+                        </ProductInfo>\r\n+                        <button>Contribuir</button>\r\n+                    </ProductContent>\r\n+                )\r\n+            })}\r\n+        </ProductContainer>\r\n     )\r\n }\r\n \r\n export default Product\r\n"
                },
                {
                    "date": 1674507640673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n                         <h3>{product?.name}</h3>\r\n                         <ProductInfo>\r\n                             <p>{product?.description}</p>\r\n                         </ProductInfo>\r\n-                        <button>Contribuir</button>\r\n+                        <button>{product.price}</button>\r\n                     </ProductContent>\r\n                 )\r\n             })}\r\n         </ProductContainer>\r\n"
                },
                {
                    "date": 1674507941683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,4 +35,50 @@\n     )\r\n }\r\n \r\n export default Product\r\n+export async function getServerSideProps() {\r\n+    try {\r\n+        const response = await stripe.products.list({\r\n+            expand: ['data.default_price'],\r\n+        })\r\n+        if (!response) {\r\n+            console.log('Response deu ruim', {\r\n+                cause: response,\r\n+            })\r\n+        }\r\n+\r\n+        console.log('***************************')\r\n+        console.log(response)\r\n+        console.log('***************************')\r\n+\r\n+        const formatAmount = (amount: number | null) => {\r\n+            if (!amount) return\r\n+            return new Intl.NumberFormat('pt-BR', {\r\n+                style: 'currency',\r\n+                currency: 'BRL',\r\n+            }).format(amount / 100)\r\n+        }\r\n+        const products = response.data.map(product => {\r\n+            const price = product.default_price as Stripe.Price\r\n+            return {\r\n+                id: product.id,\r\n+                name: product.name,\r\n+                description: product.description,\r\n+                imageURL: product.images[0],\r\n+                price: formatAmount(price.unit_amount),\r\n+            }\r\n+        })\r\n+\r\n+        return {\r\n+            props: { products },\r\n+\r\n+        }\r\n+    } catch (error) {\r\n+        console.error('Deu ruim', {\r\n+            cause: error,\r\n+        })\r\n+        return {\r\n+            props: {}\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1674507977807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import Image from 'next/image';\r\n+import { stripe } from '../../lib/stripe';\r\n import { ProductContainer, ProductContent, ProductImage, ProductInfo } from '../../styles/page/product'\r\n interface ProductProps {\r\n     products: {\r\n         id: string\r\n"
                },
                {
                    "date": 1674507991322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import Image from 'next/image';\r\n+import Stripe from 'stripe';\r\n import { stripe } from '../../lib/stripe';\r\n import { ProductContainer, ProductContent, ProductImage, ProductInfo } from '../../styles/page/product'\r\n interface ProductProps {\r\n     products: {\r\n"
                },
                {
                    "date": 1674508178000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,8 @@\n         </ProductContainer>\r\n     )\r\n }\r\n \r\n-export default Product\r\n export async function getServerSideProps() {\r\n     try {\r\n         const response = await stripe.products.list({\r\n             expand: ['data.default_price'],\r\n@@ -82,5 +81,7 @@\n         return {\r\n             props: {}\r\n         }\r\n     }\r\n-}\n\\ No newline at end of file\n+}\r\n+\r\n+export default Product\n\\ No newline at end of file\n"
                },
                {
                    "date": 1674508236595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,52 +36,5 @@\n         </ProductContainer>\r\n     )\r\n }\r\n \r\n-export async function getServerSideProps() {\r\n-    try {\r\n-        const response = await stripe.products.list({\r\n-            expand: ['data.default_price'],\r\n-        })\r\n-        if (!response) {\r\n-            console.log('Response deu ruim', {\r\n-                cause: response,\r\n-            })\r\n-        }\r\n-\r\n-        console.log('***************************')\r\n-        console.log(response)\r\n-        console.log('***************************')\r\n-\r\n-        const formatAmount = (amount: number | null) => {\r\n-            if (!amount) return\r\n-            return new Intl.NumberFormat('pt-BR', {\r\n-                style: 'currency',\r\n-                currency: 'BRL',\r\n-            }).format(amount / 100)\r\n-        }\r\n-        const products = response.data.map(product => {\r\n-            const price = product.default_price as Stripe.Price\r\n-            return {\r\n-                id: product.id,\r\n-                name: product.name,\r\n-                description: product.description,\r\n-                imageURL: product.images[0],\r\n-                price: formatAmount(price.unit_amount),\r\n-            }\r\n-        })\r\n-\r\n-        return {\r\n-            props: { products },\r\n-\r\n-        }\r\n-    } catch (error) {\r\n-        console.error('Deu ruim', {\r\n-            cause: error,\r\n-        })\r\n-        return {\r\n-            props: {}\r\n-        }\r\n-    }\r\n-}\r\n-\r\n export default Product\n\\ No newline at end of file\n"
                },
                {
                    "date": 1674508368867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,12 +12,12 @@\n     }[]\r\n }\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n-    // async function handleContribute() {\r\n+    async function handleContribute(id: string) {\r\n+        console.log('handleContribute', id)\r\n+    }\r\n \r\n-    // }\r\n-\r\n     return (\r\n         <ProductContainer>\r\n             {products.map(product => {\r\n                 return (\r\n@@ -28,9 +28,9 @@\n                         <h3>{product?.name}</h3>\r\n                         <ProductInfo>\r\n                             <p>{product?.description}</p>\r\n                         </ProductInfo>\r\n-                        <button>{product.price}</button>\r\n+                        <button onClick={handleContribute(product.id)}>{product.price}</button>\r\n                     </ProductContent>\r\n                 )\r\n             })}\r\n         </ProductContainer>\r\n"
                },
                {
                    "date": 1674508400065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     }[]\r\n }\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n-    async function handleContribute(id: string) {\r\n+    async function handleContribute(product) {\r\n         console.log('handleContribute', id)\r\n     }\r\n \r\n     return (\r\n@@ -28,9 +28,9 @@\n                         <h3>{product?.name}</h3>\r\n                         <ProductInfo>\r\n                             <p>{product?.description}</p>\r\n                         </ProductInfo>\r\n-                        <button onClick={handleContribute(product.id)}>{product.price}</button>\r\n+                        <button onClick={handleContribute(product)}>{product.price}</button>\r\n                     </ProductContent>\r\n                 )\r\n             })}\r\n         </ProductContainer>\r\n"
                },
                {
                    "date": 1674508407606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,10 @@\n     }[]\r\n }\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n-    async function handleContribute(product) {\r\n-        console.log('handleContribute', id)\r\n+    async function handleContribute(product:any) {\r\n+        console.log('handleContribute', product)\r\n     }\r\n \r\n     return (\r\n         <ProductContainer>\r\n"
                },
                {
                    "date": 1674508439113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,10 @@\n     }[]\r\n }\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n-    async function handleContribute(product:any) {\r\n-        console.log('handleContribute', product)\r\n+    async function handleContribute(event:any) {\r\n+        console.log('handleContribute', event)\r\n     }\r\n \r\n     return (\r\n         <ProductContainer>\r\n@@ -28,9 +28,9 @@\n                         <h3>{product?.name}</h3>\r\n                         <ProductInfo>\r\n                             <p>{product?.description}</p>\r\n                         </ProductInfo>\r\n-                        <button onClick={handleContribute(product)}>{product.price}</button>\r\n+                        <button onClick={event => handleContribute(event)}>{product.price}</button>\r\n                     </ProductContent>\r\n                 )\r\n             })}\r\n         </ProductContainer>\r\n"
                },
                {
                    "date": 1674508599896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n         id: string\r\n         description: string;\r\n         name: string;\r\n         imageURL: string;\r\n+        priceFormatted: string\r\n         price: string\r\n     }[]\r\n }\r\n \r\n"
                },
                {
                    "date": 1674508678347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n         id: string\r\n         description: string;\r\n         name: string;\r\n         imageURL: string;\r\n-        priceFormatted: string\r\n         price: string\r\n     }[]\r\n }\r\n \r\n"
                },
                {
                    "date": 1674509023782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import Image from 'next/image';\r\n+import { useState } from 'react';\r\n import Stripe from 'stripe';\r\n import { stripe } from '../../lib/stripe';\r\n import { ProductContainer, ProductContent, ProductImage, ProductInfo } from '../../styles/page/product'\r\n interface ProductProps {\r\n@@ -11,9 +12,12 @@\n         price: string\r\n     }[]\r\n }\r\n \r\n+\r\n+\r\n const Product = ({ products }: ProductProps) => {\r\n+    const [product, setProduct] = useState<ProductProps>({} as ProductProps)\r\n     async function handleContribute(event:any) {\r\n         console.log('handleContribute', event)\r\n     }\r\n \r\n@@ -28,9 +32,9 @@\n                         <h3>{product?.name}</h3>\r\n                         <ProductInfo>\r\n                             <p>{product?.description}</p>\r\n                         </ProductInfo>\r\n-                        <button onClick={event => handleContribute(event)}>{product.price}</button>\r\n+                        <button onClick={() => setProduct(product)}>{product.price}</button>\r\n                     </ProductContent>\r\n                 )\r\n             })}\r\n         </ProductContainer>\r\n"
                },
                {
                    "date": 1674509063002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \r\n const Product = ({ products }: ProductProps) => {\r\n     const [product, setProduct] = useState<ProductProps>({} as ProductProps)\r\n     async function handleContribute(event:any) {\r\n-        console.log('handleContribute', event)\r\n+        console.log('handleContribute', product)\r\n     }\r\n \r\n     return (\r\n         <ProductContainer>\r\n"
                },
                {
                    "date": 1674509195982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,12 +13,19 @@\n     }[]\r\n }\r\n \r\n \r\n+interface Product {\r\n+    id: string\r\n+    description: string;\r\n+    name: string;\r\n+    imageURL: string;\r\n+    price: string\r\n+}\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n-    const [product, setProduct] = useState<ProductProps>({} as ProductProps)\r\n-    async function handleContribute(event:any) {\r\n+    const [product, setProduct] = useState<Product>()\r\n+    async function handleContribute(event: any) {\r\n         console.log('handleContribute', product)\r\n     }\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1674509245332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,10 @@\n }\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n     const [product, setProduct] = useState<Product>()\r\n-    async function handleContribute(event: any) {\r\n-        console.log('handleContribute', product)\r\n+    async function handleContribute(product: Product) {\r\n+        setProduct(product)\r\n     }\r\n \r\n     return (\r\n         <ProductContainer>\r\n@@ -39,9 +39,9 @@\n                         <h3>{product?.name}</h3>\r\n                         <ProductInfo>\r\n                             <p>{product?.description}</p>\r\n                         </ProductInfo>\r\n-                        <button onClick={() => setProduct(product)}>{product.price}</button>\r\n+                        <button onClick={() => handleContribute(product)}>{product.price}</button>\r\n                     </ProductContent>\r\n                 )\r\n             })}\r\n         </ProductContainer>\r\n"
                },
                {
                    "date": 1674513493793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n }\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n     const [product, setProduct] = useState<Product>()\r\n-    async function handleContribute(product: Product) {\r\n+    const handleContribute = (product: Product) => {\r\n         setProduct(product)\r\n     }\r\n \r\n     return (\r\n@@ -39,9 +39,9 @@\n                         <h3>{product?.name}</h3>\r\n                         <ProductInfo>\r\n                             <p>{product?.description}</p>\r\n                         </ProductInfo>\r\n-                        <button onClick={() => handleContribute(product)}>{product.price}</button>\r\n+                        <button onClick={handleContribute(product)}>{product.price}</button>\r\n                     </ProductContent>\r\n                 )\r\n             })}\r\n         </ProductContainer>\r\n"
                },
                {
                    "date": 1674513526742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,11 @@\n }\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n     const [product, setProduct] = useState<Product>()\r\n-    const handleContribute = (product: Product) => {\r\n-        setProduct(product)\r\n+    const handleContribute = (p: Product) => {\r\n+        setProduct(p)\r\n+        console.log(p)\r\n     }\r\n \r\n     return (\r\n         <ProductContainer>\r\n"
                },
                {
                    "date": 1674513536063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n                         <h3>{product?.name}</h3>\r\n                         <ProductInfo>\r\n                             <p>{product?.description}</p>\r\n                         </ProductInfo>\r\n-                        <button onClick={handleContribute(product)}>{product.price}</button>\r\n+                        <button onClick={() => handleContribute(product)}>{product.price}</button>\r\n                     </ProductContent>\r\n                 )\r\n             })}\r\n         </ProductContainer>\r\n"
                },
                {
                    "date": 1674513556292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n const Product = ({ products }: ProductProps) => {\r\n     const [product, setProduct] = useState<Product>()\r\n     const handleContribute = (p: Product) => {\r\n         setProduct(p)\r\n-        console.log(p)\r\n+        console.log(product)\r\n     }\r\n \r\n     return (\r\n         <ProductContainer>\r\n"
                },
                {
                    "date": 1674513619685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n                         <h3>{product?.name}</h3>\r\n                         <ProductInfo>\r\n                             <p>{product?.description}</p>\r\n                         </ProductInfo>\r\n-                        <button onClick={() => handleContribute(product)}>{product.price}</button>\r\n+                        <button onClick={() => setProduct(product)}>{product.price}</button>\r\n                     </ProductContent>\r\n                 )\r\n             })}\r\n         </ProductContainer>\r\n"
                },
                {
                    "date": 1674513632332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,9 @@\n }\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n     const [product, setProduct] = useState<Product>()\r\n-    const handleContribute = (p: Product) => {\r\n-        setProduct(p)\r\n+    const handleContribute = () => {\r\n         console.log(product)\r\n     }\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1674513801630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,10 @@\n }\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n     const [product, setProduct] = useState<Product>()\r\n-    const handleContribute = () => {\r\n-        console.log(product)\r\n+    const handleContribute = (p) => {\r\n+        console.log('p', p)\r\n     }\r\n \r\n     return (\r\n         <ProductContainer>\r\n@@ -39,9 +39,11 @@\n                         <h3>{product?.name}</h3>\r\n                         <ProductInfo>\r\n                             <p>{product?.description}</p>\r\n                         </ProductInfo>\r\n-                        <button onClick={() => setProduct(product)}>{product.price}</button>\r\n+                        <button onClick={() => {\r\n+                            handleContribute(product)\r\n+                        }}>{product.price}</button>\r\n                     </ProductContent>\r\n                 )\r\n             })}\r\n         </ProductContainer>\r\n"
                },
                {
                    "date": 1674514647794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n         description: string;\r\n         name: string;\r\n         imageURL: string;\r\n         price: string\r\n+        priceId: string\r\n     }[]\r\n }\r\n \r\n \r\n@@ -22,11 +23,19 @@\n     price: string\r\n }\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n-    const [product, setProduct] = useState<Product>()\r\n-    const handleContribute = (p) => {\r\n-        console.log('p', p)\r\n+    const handleContribute = async (unitProduct:Product) => {\r\n+        try {\r\n+            const response  =  await fetch('/api/checkout', {\r\n+                method: 'POST',\r\n+                body:\r\n+            })\r\n+        } catch (error) {\r\n+            console.error('Ocorreu um erro ao processar o pagamento', {\r\n+                cause: error,\r\n+            })\r\n+        }\r\n     }\r\n \r\n     return (\r\n         <ProductContainer>\r\n"
                },
                {
                    "date": 1674514657562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     const handleContribute = async (unitProduct:Product) => {\r\n         try {\r\n             const response  =  await fetch('/api/checkout', {\r\n                 method: 'POST',\r\n-                body:\r\n+                body:{}\r\n             })\r\n         } catch (error) {\r\n             console.error('Ocorreu um erro ao processar o pagamento', {\r\n                 cause: error,\r\n"
                },
                {
                    "date": 1674514691475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,16 +20,17 @@\n     description: string;\r\n     name: string;\r\n     imageURL: string;\r\n     price: string\r\n+    priceId: string\r\n }\r\n \r\n const Product = ({ products }: ProductProps) => {\r\n     const handleContribute = async (unitProduct:Product) => {\r\n         try {\r\n             const response  =  await fetch('/api/checkout', {\r\n                 method: 'POST',\r\n-                body:{}\r\n+                body:unitProduct.priceId\r\n             })\r\n         } catch (error) {\r\n             console.error('Ocorreu um erro ao processar o pagamento', {\r\n                 cause: error,\r\n"
                },
                {
                    "date": 1674514718188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n \r\n const Product = ({ products }: ProductProps) => {\r\n     const handleContribute = async (unitProduct:Product) => {\r\n         try {\r\n+            console.log('unitProduct', unitProduct)\r\n             const response  =  await fetch('/api/checkout', {\r\n                 method: 'POST',\r\n                 body:unitProduct.priceId\r\n             })\r\n"
                },
                {
                    "date": 1674514933508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         try {\r\n             console.log('unitProduct', unitProduct)\r\n             const response  =  await fetch('/api/checkout', {\r\n                 method: 'POST',\r\n-                body:unitProduct.priceId\r\n+                body:'price_1MAHE0D2xnnfjSLjyFOaQDkU'\r\n             })\r\n         } catch (error) {\r\n             console.error('Ocorreu um erro ao processar o pagamento', {\r\n                 cause: error,\r\n"
                },
                {
                    "date": 1674515039097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,12 +26,13 @@\n \r\n const Product = ({ products }: ProductProps) => {\r\n     const handleContribute = async (unitProduct:Product) => {\r\n         try {\r\n-            console.log('unitProduct', unitProduct)\r\n+            const priceId = unitProduct.priceId\r\n             const response  =  await fetch('/api/checkout', {\r\n                 method: 'POST',\r\n-                body:'price_1MAHE0D2xnnfjSLjyFOaQDkU'\r\n+                body: priceId\r\n+                \r\n             })\r\n         } catch (error) {\r\n             console.error('Ocorreu um erro ao processar o pagamento', {\r\n                 cause: error,\r\n"
                },
                {
                    "date": 1674515220166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,13 +26,14 @@\n \r\n const Product = ({ products }: ProductProps) => {\r\n     const handleContribute = async (unitProduct:Product) => {\r\n         try {\r\n-            const priceId = unitProduct.priceId\r\n+            const formData = new FormData()\r\n+            formData.append('priceId', unitProduct.priceId)\r\n+            \r\n             const response  =  await fetch('/api/checkout', {\r\n                 method: 'POST',\r\n-                body: priceId\r\n-                \r\n+                body: formData\r\n             })\r\n         } catch (error) {\r\n             console.error('Ocorreu um erro ao processar o pagamento', {\r\n                 cause: error,\r\n"
                },
                {
                    "date": 1674515264533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,11 @@\n             const response  =  await fetch('/api/checkout', {\r\n                 method: 'POST',\r\n                 body: formData\r\n             })\r\n+\r\n+            console.log('Response', response)\r\n+\r\n         } catch (error) {\r\n             console.error('Ocorreu um erro ao processar o pagamento', {\r\n                 cause: error,\r\n             })\r\n"
                },
                {
                    "date": 1674515367106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import axios from 'axios';\r\n import Image from 'next/image';\r\n import { useState } from 'react';\r\n import Stripe from 'stripe';\r\n import { stripe } from '../../lib/stripe';\r\n@@ -29,11 +30,10 @@\n         try {\r\n             const formData = new FormData()\r\n             formData.append('priceId', unitProduct.priceId)\r\n             \r\n-            const response  =  await fetch('/api/checkout', {\r\n-                method: 'POST',\r\n-                body: formData\r\n+            const response  =  await axios.post('/api/checkout', {\r\n+                priceId: unitProduct.priceId\r\n             })\r\n \r\n             console.log('Response', response)\r\n \r\n"
                },
                {
                    "date": 1674516801221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,13 @@\n             const response  =  await axios.post('/api/checkout', {\r\n                 priceId: unitProduct.priceId\r\n             })\r\n \r\n+\r\n+            const { checkoutURL } = response.data\r\n+\r\n+            window.location.href = checkoutURL\r\n+            \r\n             console.log('Response', response)\r\n \r\n         } catch (error) {\r\n             console.error('Ocorreu um erro ao processar o pagamento', {\r\n"
                },
                {
                    "date": 1674516865327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,10 +37,10 @@\n \r\n \r\n             const { checkoutURL } = response.data\r\n \r\n-            window.location.href = checkoutURL\r\n-            \r\n+            // window.location.href = checkoutURL\r\n+\r\n             console.log('Response', response)\r\n \r\n         } catch (error) {\r\n             console.error('Ocorreu um erro ao processar o pagamento', {\r\n"
                },
                {
                    "date": 1674517021167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \r\n \r\n             const { checkoutURL } = response.data\r\n \r\n-            // window.location.href = checkoutURL\r\n+            window.location.href = checkoutURL\r\n \r\n             console.log('Response', response)\r\n \r\n         } catch (error) {\r\n"
                }
            ],
            "date": 1674505998730,
            "name": "Commit-0",
            "content": "import { ProductContainer, ProductImage, ProductInfo } from '../../styles/page/product'\r\nimport champanheImage from '../../assets/champanhe.png'\r\nimport Image from 'next/image'\r\nimport { GetServerSideProps, GetStaticProps } from 'next'\r\nimport { stripe } from '../../lib/stripe'\r\nimport Stripe from 'stripe'\r\n\r\ninterface ProductProps {\r\n    products?: {\r\n        id: string\r\n        description: string;\r\n        name: string;\r\n        imageURL?: string;\r\n        price: string\r\n    }\r\n}\r\n\r\nconst Product = ({ products }: ProductProps) => {\r\n    // async function handleContribute() {\r\n\r\n    // }\r\n\r\n    return (\r\n\r\n\r\n        {\r\n            products.map(product => {\r\n                <ProductContainer>\r\n                    <ProductImage>\r\n                        // <Image priority src={product.images} alt={''} width={300} />\r\n                    </ProductImage>\r\n                    <h3>{product?.name}</h3>\r\n                    <ProductInfo>\r\n                        <p>{product?.description}</p>\r\n                    </ProductInfo>\r\n                    <button>Contribuir</button>\r\n                </ProductContainer>\r\n            })\r\n        }\r\n    )\r\n}\r\n\r\nexport default Product\r\n"
        }
    ]
}